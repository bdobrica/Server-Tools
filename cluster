#!/bin/bash

MYALL="mysql -s -u root -p";
MYSQL="mysql -s -u -p gemini";
IP=`ifconfig eth0 | grep "inet addr" | awk -F ':' '{ print $2; }' | sed -e 's/ .*$//'`;

eerror () {
	echo -e " \033[0;31m*\033[00m" $1;
	}
ebegin () {
	echo -e " \033[1;32m*\033[00m" $1;
	}
einfo () {
	echo -e " \033[0;35m*\033[00m" $1;
	}
eread () {
	echo -n -e " \033[0;35m*\033[00m" $1;
	}
eend ()	{
	COLUMNS=`tput cols`;
	if [[ $1 -eq 0 ]]; then
		echo -n -e "\033[s\033[1A\033[$((COLUMNS-6))C[\033[1;32mok\033[00m]\033[u";
	else
		echo -n -e "\033[s\033[1A\033[$((COLUMNS-6))C[\033[0;31m!!\033[00m]\033[u";
		exit 1;
	fi
	}

case $1 in
zone*)
	ebegin "DNS Zones:";
	case $2 in
	add)
		einfo "Add DNS Zone";
		Z="";
		while [ "$Z" = "" ]; do
			eread "zone: ";
			read Z;
		done
		ebegin "adding zone $Z ...";
		echo "insert into zones (zone,serial,nameserver,email,nodes) values ('$Z','`date +%Y%m%d1`','kernel.coretarget.ro,amphion.all-news.ro;zethus.all-news.ro','support.all-news.ro','kernel');" | $MYSQL;
		eend 0;
		;;
	del*)
		einfo "Delete DNS Zone?";
		echo "select id,zone from zones order by id;" | $MYSQL | while read l; do
			id=`echo $l | awk '{ print $1; }'`;
			zn=`echo $l | awk '{ print $2; }'`;
			einfo "$id.\t$zn";
		done
		eread "Zone ID: [QUIT]";
		read Z;
		[ -z "$Z" ] && exit;
		ebegin "deleting zone #$Z ...";
		echo "delete from zones where id='$Z';" | $MYSQL;
		eend;
		ebegin "deleting zone #$Z records ...";
		echo "delete from records where zoneid='$Z';" | $MYSQL;
		eend;
		einfo "restarting DNS subsystem ...";
		/etc/init.d/bind9 restart
		;;
	*)
		einfo "List DNS Zones";
		echo "select id,zone from zones order by id;" | $MYSQL | while read l; do
			id=`echo $l | awk '{ print $1; }'`;
			zn=`echo $l | awk '{ print $2; }'`;
			if ( dig @8.8.8.8 "$zn" NS | grep -q `hostname -f` ); then
				ebegin "$id.\t$zn";
			else
				eerror "$id.\t$zn";
			fi
		done
		;;
	esac
	;;
vhost*)
	ebegin "Virtual Hosts:";
	case $2 in
	add)
		einfo "Adding a Virtual Host!"
		V="";
		while [ "$V" = "" ]; do
			eread "virtual host name   : "
			read V;
		done

		NV=`echo ${V%.*} | sed -e 's/[^a-z0-9]\+//g'`;
		ZD=${V%.*}; ZD=${ZD%.*}; ZD=${V#$ZD.};

		eread "virtual host alias  : ";
		read A;
		eread "virtual host rewrite: [wp] ";
		read R;
		if [ -z "$R" ]; then R='[wp]'; else R="[$R]"; fi

		UP=`makepasswd --chars=8 --crypt`;
		UPP=${UP%   *};
		UPC=${UP#*   };

		eread "add shell users: [y/N] ";
		Y=""; read Y;
		if [ "$Y" = "y" ]; then
			while [ "$RU" = "" ]; do
				eread "username: [$NV]";
				read NU;
				if [ -z "$NU" ]; then NU="$NV"; fi
				if [ `grep "$NU" "/etc/passwd"` ]; then
					eerror "user $NU already exists!"
					continue;
				fi
				ebegin "adding user $NU ..."
				useradd -p "$UPC" -U -s "/usr/bin/rssh" -d "/mnt/www/$ZD/$V" "$NU"
				U=`grep "$NU" "/etc/passwd" | awk -F ':' '{ print $3; }'`;
				G=`grep "$NU" "/etc/passwd" | awk -F ':' '{ print $4; }'`;
				eend;
				einfo "username: $NU";
				einfo "password: $UPP";
				RU=1;
			done
		else
			eread "assign to existing user: [websrv] ";
			read EU;
			if [ -z "$EU" ]; then EU='websrv'; fi
			U=`grep "$EU" "/etc/passwd" | awk -F ':' '{ print $3; }'`;
			G=`grep "$EU" "/etc/passwd" | awk -F ':' '{ print $4; }'`;
		fi
			
		Y="";
		read -p "add user database: [y/N]" Y;
		if [ "$Y" = "y" ]; then
			read -p "database name    : [db_$NV]" DN;
			if [ -z "$DN" ]; then DN="db_$NV"; fi
			read -p "database username: [du_$NV]" DU;
			if [ -z "$DU" ]; then DU="du_$NV"; fi
			if [[ `echo "select User from mysql.user where Host='localhost' and User='$DU';" | $MYALL` = "" ]]; then
				if [[ `echo "select Db from mysql.db where Db='$DN';" | $MYALL` = "" ]]; then
					ebegin "creating database $dn ...";
					echo "create database $DN;" | $MYALL;
					echo "grant all privileges on $DN.* to '$DU'@'localhost' identified by '$UPP';" | $MYALL;
					eend;
					einfo "database name: $DN";
					einfo "database user: $DU";
					einfo "database pass: $UPP";
				fi
			else
				einfo "user $DN exists!"
				eread "use it anyway? [n/Y] ";
				Y=""; read Y;
				if [ "$Y" = "n"; ]; then
					echo;
				else
					if [[ `echo "select Db from mysql.db where Db='$DN';" | $MYALL` = "" ]]; then
						ebegin "creating database $dn ...";
						echo "create database $DN;" | $MYALL;
						echo "grant all privileges on $DN.* to '$DU'@'localhost';" | $MYALL;
						eend;
						einfo "database name: $DN";
						einfo "database user: $DU";
						einfo "database pass: old password";
					fi
				fi
			fi
		fi

		ebegin "adding virtual host $V ...";
		echo "insert into vhosts (server,alias,nginxrw,uid,gid,nodes) values ('$V','$A','$R','$U','$G','kernel');" | $MYSQL;
		eend;
		einfo "Restarting Nginx & Spawn-fcgi";
		/etc/init.d/nginx stop
		/etc/init.d/spawn-fcgi.php stop
		/root/tools/cluster_nginx.pl
		/etc/init.d/spawn-fcgi.php start
		/etc/init.d/nginx start
		;;
	del*)
		einfo "Delete Virtual Host";
		;;
	*)
		einfo "Listing Virtual Hosts\t\tHits\tUnique\tLoad";
		echo "select id,server from vhosts order by id;" | $MYSQL | while read l; do
			VID=`echo $l | awk '{print $1;}'`;
			VNM=`echo $l | awk '{print $2;}'`;

			QIP=`dig "@8.8.8.8" "$VNM" A | grep -e "^$VNM"`;
			QTP=`echo $QIP | awk '{print $4;}'`;
			QVL=`echo $QIP | awk '{print $5;}'`;
			if [ "$QTP" = "CNAME" ]; then
				QIP=`dig "@8.8.8.8" "${QVL%.}" A | grep -e "^${QVL%.}"`;
				QTP=`echo $QIP | awk '{print $4;}'`;
				QVL=`echo $QIP | awk '{print $5;}'`;
			fi

			if [ "$QVL" = "$IP" ]; then
				STATS="";
				if [ "$2" = "stats" ]; then
					TDAY=`date +%d/%b/%Y`;
					HITS=`grep "$TDAY" /var/log/nginx/$VNM.log | wc -l`;
					UNIQ=`grep "$TDAY" /var/log/nginx/$VNM.log | awk '{print $1;}' | sort -u | wc -l`;
					TRAF=0;
					FSIZ=`grep "$TDAY" /var/log/nginx/$VNM.log | awk '{print $10;}'`;
					for fs in $FSIZ; do TRAF=$((TRAF+fs)); done
					if [ $TRAF -ge 1073741824 ]; then
						TRAF="\033[0;31m"$((TRAF/1073741824))"G\033[00m";
					else
						if [ $TRAF -ge 1048576 ]; then
							TRAF=$((TRAF/1048576))"M";
						else
							[ $TRAF -ge 1024 ] && TRAF=$((TRAF/1024))"k";
						fi
					fi
					PADS="";
					[ ${#VNM} -le 31 ] && PADS="$PADS\t";
					[ ${#VNM} -le 23 ] && PADS="$PADS\t";
					[ ${#VNM} -le 15 ] && PADS="$PADS\t";
					[ ${#VNM} -le 7 ] && PADS="$PADS\t";
					STATS="$PADS${HITS% *}\t$UNIQ\t$TRAF";
				fi
			
				ebegin "$VID.\t$VNM$STATS";
			else
                                PADS="";
                                [ ${#VNM} -le 31 ] && PADS="$PADS\t";
                                [ ${#VNM} -le 23 ] && PADS="$PADS\t";
                                [ ${#VNM} -le 15 ] && PADS="$PADS\t";
                                [ ${#VNM} -le  7 ] && PADS="$PADS\t";
				eerror "$VID.\t$VNM\t\t\t$PADS[ \033[0;36m$QVL\033[00m ]";
			fi
		done
		;;
	esac
	;;
*)
	id=`echo "select id from zones where zone like '$1';" | $MYSQL`;
	if [ ! -z "$id" ]; then
		ebegin "Zone: $1";
		case $2 in
		record*)
			case $3 in
			add)
				read -p "Name: () " N;
				read -p "Type: (A) " T;
				if [ -z "$T" ]; then T="A"; fi
				read -p "Value: ($IP) " V;
				if [ -z "$V" ]; then V="$IP"; fi

				echo "$N	$T	$V";
				read -p "adding record [$N $T $V]. are you sure? [y/N] " Y;
				if [ -z $Y ]; then exit 1; fi
				echo "insert into records (name,type,value,zoneid) values ('$N','$T','$V','$id');" | $MYSQL;
				;;
			del*)
				read -p "Name: ($1.) " N;
				if [ -z $N ]; then exit 1; fi
				;;
			*)
				einfo "Zone $1 records:";
				echo "select id,if(name='*','\\\*',name),type,value from records where zoneid='$id' order by id;" | $MYSQL | while read l; do
					rid=`echo $l | awk '{ print $1; }'`;
					rnm=`echo $l | awk '{ print $2; }'`;
					[ "$rnm" = "" ] && rnm="\t\t\t";
					rtp=`echo $l | awk '{ print $3; }'`;
					rvl=`echo $l | awk '{ print $4; }'`;
					ebegin "$rid.\t$rnm\t$rtp\t$rvl";
				done
				;;
			esac
			;;
		esac
	exit;
	fi
	
	;;
esac

